) %>%
arrange(sample_date, facility, target, biological_replicate) %>%
select(sample_date, facility, target, biological_replicate, target, collection_num, ct) %>%
mutate(facility = as.factor(facility), facility = recode(facility, NO = "A", MI = "B", CC = "C"), facility = ordered(facility, levels = c("A", "B", "C")))
#Subset year 2 data
wbe <- wbe %>% filter(between(sample_date, as.Date("2021-07-06") , as.Date("2022-12-21")))
plant %<>%
mutate(date = as.Date(date, format = "%m/%d/%Y"), influent_flow_L = influent_flow_mg*1e6*231*(0.0254^3)*1000) %>%
select(date, wrf, influent_flow_L, influent_tss_mg_l) %>%
mutate(wrf = as.factor(wrf), wrf = recode(wrf, NO = "A", MI = "B", CC = "C"), wrf = ordered(wrf, levels = c("A", "B", "C")))
plant_summary = plant %>%
group_by(wrf) %>%
dplyr::summarise(daily_flow_MLD = mean(influent_flow_L/1000000),
daily_flow_MLD_SD = sd(influent_flow_L/1000000),
tss_mg_L = mean(influent_tss_mg_l),
tss_mg_L_SD = sd(influent_tss_mg_l))
covid <- full_join(
covid%>%
select(cases.symptom.onset=cases, date=symptom.date),
covid.report%>%
select(cases.reported=cases, date=report_date),
by = "date"
) %>%
full_join(
covid.testing%>%
rename(date=collection_date),
by="date"
) %>%
select(date, cases.symptom.onset, cases.reported, pcr_tests, pcr_pos, pcr_pos_7dma, pcr_pos_14dma) %>%
full_join(cases.wrf, by = "date")
#clean environment
rm(covid.report, covid.testing)
#Determine the LOD and LOQ by plotting the Normal QQ-Plot
qqnorm.ct.n1 <- qqnorm(wbe$ct[which(wbe$target=="N1")], plot.it = T) %>% as.data.frame()
qqnorm.ct.n2 <- qqnorm(wbe$ct[which(wbe$target=="N2")], plot.it = T) %>% as.data.frame()
tiff(filename = "figures/LML/detection_lims.tiff", height = 9, width = 8, units = "in", res = 600)
qqnorm.Explorer.ct <- function(qqnorm.ct){
qqnorm.ct <- qqnorm.ct[which(complete.cases(qqnorm.ct)),]
qqnorm.ct <- qqnorm.ct[order(qqnorm.ct$x),]
qqnorm.ct <- cbind(qqnorm.ct, rbind(NA, qqnorm.ct[-nrow(qqnorm.ct),])) %>% setNames(., nm = c("x", "y", "x-1", "y-1"))
qqnorm.ct %<>% mutate(rise = y-`y-1`, run = x-`x-1`) %>% mutate(slope = rise / run)
qqnorm.ct$lod <- NA
qqnorm.ct$loq <- NA
prev.slope <- 1
lod.found <- 0
for(i in nrow(qqnorm.ct):2){
if(lod.found==0){
if(qqnorm.ct$slope[i]<1 & prev.slope <1){
qqnorm.ct$lod[i] <- 1
lod.found <- 1
}else{
prev.slope <- qqnorm.ct$slope[i]
}
}
if(lod.found==1){
if(qqnorm.ct$slope[i]>1){
qqnorm.ct$loq[i] <- 1
break
}else{
prev.slope <- qqnorm.ct$slope[i]
}
}
}
lod.ct <- qqnorm.ct$y[which(qqnorm.ct$lod==1)]
loq.ct <- qqnorm.ct$y[which(qqnorm.ct$loq==1)]
return(list(qqnorm.dataset = qqnorm.ct, lod = lod.ct, loq = loq.ct))
}
qqnorm.ct.n1 <- qqnorm.Explorer.ct(qqnorm.ct.n1)
qqnorm.ct.n2 <- qqnorm.Explorer.ct(qqnorm.ct.n2)
n1_lod <- qqnorm.ct.n1$lod
n1_loq <- qqnorm.ct.n1$loq
n2_lod <- qqnorm.ct.n2$lod
n2_loq <- qqnorm.ct.n2$loq
sf <- wbe %>%
group_by(sample_date, facility, biological_replicate, target) %>%
dplyr::summarise(n = n()) %>%
ungroup() %>%
pivot_wider(names_from = target, values_from = n) %>%
mutate(n = N1+N2) %>%
group_by(sample_date, facility) %>%
dplyr::summarise(n.bio = n(), n.tech = sum(n, na.rm = T), N1 = sum(N1, na.rm = T), N2 = sum(N2, na.rm = T)) %>%
ungroup()
sf_plot = sf %>% ggplot(aes(x = sample_date, y = n.bio)) +
geom_point() +
facet_wrap(~facility, ncol = 1) +
ylab("Number of Extraction Replicates") +
xlab("Sample Date") +
theme_bw()
tiff('figures/LML/sampling_frequency.tiff', units="in", width=9, height=6.5, res=600, compression = 'lzw')
plot(sf_plot)
dev.off()
wbe.summary.tr <- wbe %>%
group_by(sample_date, facility, target, biological_replicate) %>%
dplyr::summarise(
n=n(),
n.miss=sum(is.na(ct)),
ct.mean=mean(ct,na.rm=T),
ct.sd=sd(ct,na.rm=T)
) %>%
mutate_all(function(x){ifelse(is.nan(x), NA, x)}) %>%
ungroup() %>%
mutate(n.pos = n - n.miss) %>%
mutate(pos = ifelse(n.pos > 0, "pos", "neg"))
View(wbe)
View(plant_summary)
View(plant)
View(cases.wrf)
View(covid)
print(wbe)
wbe
wbe %>% rename(sample_date = "date") %>% select(c(date, facility, target, collection_num, ct))
wbe %>% rename("date" = sample_date) %>% select(c(date, facility, target, collection_num, ct))
wbe_clean <- wbe %>% rename("date" = sample_date) %>% select(c(date, facility, target, collection_num, ct))
?full_join
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, facility, target, collection_num, ct))
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, facility, target, collection_num, ct))
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, wrf, target, collection_num, ct))
inner_join(x = wbe_clean, y = plant, by = c(date, wrf))
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, wrf, target, collection_num, ct))
inner_join(x = wbe_clean, y = plant, by = c(date, wrf))
View(wbe_clean)
load(plant)
plant
wbe_clean
plant
wbe_clean
full_join(x = wbe_clean, y = plant
plant
wbe_clean
full_join(x = wbe_clean, y = plant)
wbe_plant_join <- full_join(x = wbe_clean, y = plant)
View(wbe_plant_join)
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>% mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
library(tidyverse)
library(tidyverse)
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, wrf, target, collection_num, ct))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>% mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
n1_lod
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>% mutate(ct = replace_na(39.93763)) %>%     mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>% mutate(ct = replace_na(39.93763)) %>%     mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293))) %>% summarise(copy_num_uL_rxn = mean(copy_num_uL_rxn))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>% mutate(ct = replace_na(39.93763)) %>%     mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join %>% group_by(c(date,wrf,target)) %>%  summarise(copy_num_uL_rxn = mean(copy_num_uL_rxn)) %>%
ungroup()
wbe_plant_join %>% group_by(c(wrf,target,collection_num)) %>%  summarise(copy_num_uL_rxn = mean(copy_num_uL_rxn)) %>%
ungroup()
wbe_plant_join %>% group_by(c(wrf,target,collection_num)) %>%
summarise(copy_num_uL_rxn = mean(copy_num_uL_rxn))
wbe_plant_join %>% group_by(c(target,collection_num)) %>%
summarise(copy_num_uL_rxn = mean(copy_num_uL_rxn))
wbe_plant_join %>% summarise(copy_num_uL_rxn = mean(copy_num_uL_rxn))
wbe_plant_join %>% group_by(c(target,collection_num)) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn))
wbe_plant_join %>% group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn))
wbe_plant_join %>% group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn)) %>% ungroup()
wbe_plant_join %>% group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn)) %>% ungroup() %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000)
wbe_plant_join_avg <- wbe_plant_join %>% group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn)) %>% ungroup() %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000)
View(wbe_plant_join_avg)
wbe_plant_join_avg <- wbe_plant_join %>% select(c(date,target,collection_num,influent_flow_L,copy_num_uL_rxn) %>%  group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn)) %>% ungroup() %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000)
wbe_plant_join_avg <- wbe_plant_join %>% select(c(date,target,collection_num,influent_flow_L,copy_num_uL_rxn)) %>%  group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn)) %>% ungroup() %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000)
wbe_plant_join_avg <- wbe_plant_join %>%  group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% ungroup() %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000)
wbe_plant_join_avg %>% mutate(predicted_cases = flow_L_avg*copy_num_L/128*(4.7*10^7))
wbe_plant_join_avg %>% mutate(predicted_cases = flow_L_avg*copy_num_L/128*4.7*10^7)
wbe_plant_join_avg %>% mutate(predicted_cases = (flow_L_avg*copy_num_L)/(128*4.7*10^7))
prediction <- wbe_plant_join_avg %>% mutate(predicted_cases = (flow_L_avg*copy_num_L)/(128*4.7*10^7))
View(prediction)
wbe_plant_join_avg <- wbe_plant_join %>%  group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
library(tidyverse)
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, wrf, target, collection_num, ct))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>% mutate(ct = replace_na(39.93763)) %>%     mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>%
mutate(copy_num_uL_rxn =ifelse(NA, 39.93763483, copy_num_uL_rxn)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>%
mutate(ct = ifelse(NA, 39.93763483, ct)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>%
mutate(ct = ifelse("NA", 39.93763483, ct)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
?ifelse
replace_na
?replace_na
wbe_plant_join$ct %>% replace_na(39.93763483)
wbe_plant_join <- full_join(x = wbe_clean, y = plant)
wbe_plant_join %>% replace_na(ct, 39.93763483)
wbe_plant_join <- full_join(x = wbe_clean, y = plant)
wbe_plant_join %>% replace_na(data =ct, replace =39.93763483)
wbe_plant_join %>% mutate(ct=as.numeric(ifelse(ct==NA,39.93763483,ct)))
wbe_plant_join %>% mutate(ct= replace_na(replace = 39.9))
wbe_plant_join <- full_join(x = wbe_clean, y = plant)
wbe_plant_join %>% mutate(ct= replace_na(data = ct, replace = 39.9))
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join <- full_join(x = wbe_clean, y = plant)
wbe_plant_join %>% mutate(ct= replace_na(data = ct, replace = 39.93763483))
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join <- full_join(x = wbe_clean, y = plant)
wbe_plant_join %>% mutate(ct= replace_na(data = ct, replace = 39.93763483)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join_avg <- wbe_plant_join %>%  group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
wbe_plant_join_avg <- wbe_plant_join %>% group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>%
mutate(ct= replace_na(data = ct, replace = 39.93763483)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join_avg <- wbe_plant_join %>% group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
prediction <- wbe_plant_join_avg %>% mutate(predicted_cases = (flow_L_avg*copy_num_L)/(128*4.7*10^7))
View(prediction)
wbe_plant_join_avg <- wbe_plant_join %>% group_by(date,target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
prediction <- wbe_plant_join_avg %>% mutate(predicted_cases = (flow_L_avg*copy_num_L)/(128*4.7*10^7))
wbe_plant_join_avg <- wbe_plant_join %>% group_by(target,collection_num) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
wbe_plant_join_avg <- wbe_plant_join %>% group_by(target,collection_num,date) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
full_join(prediction, covid)
prediction_compare <- full_join(prediction, covid)
View(prediction_compare)
prediction_compare %>% ggplot(aes(x=date, y=c(predicted_cases,pcr_pos))) +
geom_point()
prediction_compare %>% ggplot(aes(x=predicted_cases, y=pcr_pos)) +
geom_point()
prediction_compare %>% ggplot(aes(x=date, y=predicted_cases)) +
geom_point()
prediction_compare %>% ggplot(aes(x=pcr_pos_7dma, y=predicted_cases)) +
geom_point() +
geom_
prediction_compare %>% ggplot(aes(x=pcr_pos_7dma, y=predicted_cases)) +
geom_point()
prediction_compare %>% ggplot(aes(x=pcr_pos, y=predicted_cases)) +
geom_point()
prediction_compare %>% ggplot(aes(x=pcr_pos, y=log(predicted_cases)) +
geom_point()
prediction_compare %>% ggplot(aes(x=pcr_pos, y=log(predicted_cases))) +
geom_point()
prediction_compare %>% ggplot(aes(x=pcr_pos, y=predicted_cases)) +
geom_point()
prediction_compare %>% ggplot(aes(x=cases.reported, y=predicted_cases)) +
geom_point()
prediction_compare %>% ggplot(aes(x=cases.reported, y=log(predicted_cases))) +
geom_point()
prediction_compare %>% ggplot(aes(x=cases.reported, y=predicted_cases)) +
geom_point()
prediction_compare %>% ggplot(aes(x=cases.reported, y=predicted_cases)) +
geom_jitter()
library(quantreg)
library(splines)
SEIR.model<-function (init, beta.s, gamma.e, gamma.i, times) {
library(deSolve)
seir <- function(time, state, parameters) {
with(as.list(c(state, parameters)), {
dS <- -beta.s * S * I
dE <- beta.s * S * I - gamma.e * E
dI <- gamma.e * E - gamma.i * I
dR <- gamma.i * I
return(list(c(dS, dE, dI, dR)))
})
}
parameters <- c(beta.s = beta.s, gamma.e = gamma.e, gamma.i = gamma.i)
out <- ode(y = init, times = times, func = seir, parms = parameters)
out <- as.data.frame(out)
out$time <- NULL
return(out)
}
plot.func <- function (Tm, beta.s, gamma.e, gamma.i, p, Y, X) {
init <- c(S = 1 - p, E = p/2, I = p/2, R = 0)
mod <- SEIR.model(init, beta.s = beta.s, gamma.e = gamma.e, gamma.i, 1:Tm)
matplot(x = 1:Tm, y = mod, type = "l", xlab = "Time", ylab = "Susceptible, Exposed, Infectious, and Recovered", main = "SEIR Model", lwd = 1, lty = 1, bty = "l", col = 1:4)
xmax <- quantile(X, 0.975)
matplot(x = 1:Tm, y = t(X), ylim = c(0, xmax), type = "p", xlab = "Time", ylab = "RNA levels", main = "", pch = 1, col = 1)
Yv <- as.vector(Y)
Xv <- as.vector(X)
BX <- bs(Xv, df = 10)
fit1 <- rq(Yv ~ BX, 0.05)
fit2 <- rq(Yv ~ BX, 0.25)
fit3 <- rq(Yv ~ BX, 0.5)
fit4 <- rq(Yv ~ BX, 0.75)
fit5 <- rq(Yv ~ BX, 0.95)
plot(Xv, Yv, xlab = "RNA levels", ylab = "Active COVID-19 Cases", col = "gray", xlim = c(0, xmax))
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit1), col = "red")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit2), col = "green")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit3), col = "blue")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit4), col = "green")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit5), col = "red")
abline(0, 0)
abline(500, 0)
abline(1000, 0)
abline(1500, 0)
abline(2000, 0)
abline(2500, 0)
abline(3000, 0)
abline(3500, 0)
abline(4000, 0)
abline(4500, 0)
abline(5000, 0)
abline(0, 0, lty = "dashed", col = "gray")
abline(500, 0, lty = "dashed", col = "gray")
abline(1000, 0, lty = "dashed", col = "gray")
abline(1500, 0, lty = "dashed", col = "gray")
abline(2000, 0, lty = "dashed", col = "gray")
abline(2500, 0, lty = "dashed", col = "gray")
abline(3000, 0, lty = "dashed", col = "gray")
abline(3500, 0, lty = "dashed", col = "gray")
abline(4000, 0, lty = "dashed", col = "gray")
abline(4500, 0, lty = "dashed", col = "gray")
abline(5000, 0, lty = "dashed", col = "gray")
}
Sewage.sim<-function (Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd) {
init <- c(S = 1 - p, E = p/2, I = p/2, R = 0)
mod <- SEIR.model(init, beta.s = beta.s, gamma.e = gamma.e, gamma.i, 1:Tm)
S <- mod[, 1]
I <- mod[, 3]
NC <- rpois(1:Tm, N * beta.s * S * I)
Tr <- round(1/gamma.e + 1/gamma.i)
NCA <- c(rep(0, (Tr - 1)), NC)
CI <- rep(-99, Tm)
for (i in 1:Tm) {
CI[i] <- sum(NCA[i:(Tr + i)])
}
Vmat <- NULL
for (i in 1:Tm) {
if (NC[i] > 0) {
Vmat <- rbind(Vmat, cbind(matrix(0, nrow = NC[i], ncol = (i - 1)), Viral.load.sim(NC[i], 1:30, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max,  G.mean, G.sd), matrix(0, nrow = NC[i], ncol = (Tm - i + 1))))
}
}
Vmat <- Vmat[, 1:Tm]
TV <- apply(Vmat, 2, sum)
tau0 <- rnorm(1, mu.tau0, sd.tau0)
Q <- rnorm(1, mu.Q, sd.Q)
tau.star <- tau0 * Q^(-(Temp - 20)/10)
OVL <- TV * (1/2)^(Ts/tau.star)
return(cbind(TV, CI, OVL))
}
Viral.load.sim <-function (n, t, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, G.mean, G.sd) {
max <- rnorm(n, mu.V.max, sd.V.max)
min <- rnorm(n, mu.V.20, sd.V.20)
G <- rnorm(n, G.mean, G.sd)
load <- NULL
for (i in 1:n) {
load.g <- 10^(t * max[i]/T.V.max) * (t <= T.V.max) + (t > T.V.max) * 10^(max[i] - (max[i] - min[i])/(20) * (t - T.V.max))
load <- rbind(load, G[i] * load.g)
}
return(load)
}
MC.COVID19.wastewater<-function (Sim, Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd){
par(mfcol = c(3, 1))
TV <- NULL
CI <- NULL
OVL <- NULL
for (i in 1:Sim) {
res <- Sewage.sim(Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd)
TV <- rbind(TV, res[, 1])
CI <- rbind(CI, res[, 2])
OVL <- rbind(OVL, res[, 3])
print(i)
}
plot.func(Tm, beta.s, gamma.e, gamma.i, p, CI, OVL)
}
library(tidyverse)
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, wrf, target, collection_num, ct))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>%
mutate(ct= replace_na(data = ct, replace = 39.93763483)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join_avg <- wbe_plant_join %>% group_by(target,collection_num,date) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
prediction <- wbe_plant_join_avg %>% mutate(predicted_cases = (flow_L_avg*copy_num_L)/(128*4.7*10^7))
prediction_compare <- full_join(prediction, covid)
MC.COVID19.wastewater(Sim = 50, Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1,
p = 0.01, N = 25,000, mu.V.max = 7.6, sd.V.max = 0.8,
mu.V.20 = 3.5, sd.V.20 = 0.35, T.V.max = 5, Ts = 60,
Temp = 48, mu.tau0 = 10, sd.tau0 = 1, mu.Q = 2.5,
sd.Q = 0.15, G.mean = 128, G.sd = 13) %>%
plot.func(Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1, p = 0.01,
y = prediction_compare$cases.reported, x = prediction_compare$copy_num_L)
MC.COVID19.wastewater(Sim = 50, Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1,
p = 0.01, N = 25,000, mu.V.max = 7.6, sd.V.max = 0.8,
mu.V.20 = 3.5, sd.V.20 = 0.35, T.V.max = 5, Ts = 60,
Temp = 48, mu.tau0 = 10, sd.tau0 = 1, mu.Q = 2.5,
sd.Q = 0.15, G.mean = 128, G.sd = 13) %>%
plot.func(Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1, p = 0.01)
MC.COVID19.wastewater(Sim = 50, Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1,
p = 0.01, N = 25,000, mu.V.max = 7.6, sd.V.max = 0.8,
mu.V.20 = 3.5, sd.V.20 = 0.35, T.V.max = 5, Ts = 60,
Temp = 48, mu.tau0 = 10, sd.tau0 = 1, mu.Q = 2.5,
sd.Q = 0.15, G.mean = 128, G.sd = 13) %>%
plot.func(Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1, p = 0.01, Y = prediction_compare$cases.reported, X = prediction_compare$copy_num_L)
MC.COVID19.wastewater(Sim = 50, Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1,
p = 0.01, N = 25,000, mu.V.max = 7.6, sd.V.max = 0.8,
mu.V.20 = 3.5, sd.V.20 = 0.35, T.V.max = 5, Ts = 60,
Temp = 48, mu.tau0 = 10, sd.tau0 = 1, mu.Q = 2.5,
sd.Q = 0.15, G.mean = 128, G.sd = 13) %>%
plot.func(Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1, p = 0.01, Y = prediction_compare$cases.reported, X = prediction_compare$copy_num_L)
MC.COVID19.wastewater(Sim = 50, Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1,
p = 0.01, N = 25,000, mu.V.max = 7.6, sd.V.max = 0.8,
mu.V.20 = 3.5, sd.V.20 = 0.35, T.V.max = 5, Ts = 60,
Temp = 48, mu.tau0 = 10, sd.tau0 = 1, mu.Q = 2.5,
sd.Q = 0.15, G.mean = 128, G.sd = 13)
plot.func(Tm = 365, beta.s = 0.05, gamma.e = 0.2, gamma.i = 0.1, p = 0.01, Y = prediction_compare$cases.reported, X = prediction_compare$copy_num_L)
View(covid)
library(tidyverse)
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, wrf, target, collection_num, ct))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>%
mutate(ct= replace_na(data = ct, replace = 39.93763483)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join_avg <- wbe_plant_join %>% group_by(target,collection_num,date) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
prediction <- wbe_plant_join_avg %>% mutate(predicted_cases = (flow_L_avg*copy_num_L)/(128*4.7*10^7))
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*10)
View(prediction_compare)
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*10) %>% remove_missing()
View(prediction_compare)
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*10)
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*10) %>% select(!c(cases_A, cases_B, cases_C))
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*10) %>% select(!c(cases_A, cases_B, cases_C)) %>% remove_missing()
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*15) %>% select(!c(cases_A, cases_B, cases_C)) %>% remove_missing()
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*15,
prediction_ratio = predicted_cases/cases.symptom.onset) %>%
select(!c(cases_A, cases_B, cases_C)) %>% remove_missing()
mean(prediction_compare$prediction_ratio)
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*15,
prediction_ratio = predicted_cases/cases.symptom.onset) %>%
select(!c(cases_A, cases_B, cases_C)) %>% remove_missing() %>% filter(prediction_ratio != "Inf")
prediction_compare %>% ggplot(y=prediction_ratio) +
geom_boxplot()
prediction_compare %>% ggplot(aes(y=prediction_ratio)) +
geom_boxplot()
prediction_compare %>% ggplot(aes(cases.symptom.onset, prediction_ratio)) +
geom_point()
prediction_compare %>% ggplot(aes(log10(cases.symptom.onset), prediction_ratio)) +
geom_point()
prediction_compare %>% ggplot(aes(cases.symptom.onset, prediction_ratio)) +
geom_point() +
geom_line()
prediction_compare %>% ggplot(aes(cases.symptom.onset, prediction_ratio)) +
geom_point() +
geom_smooth()
prediction_compare %>% ggplot(aes(log10(cases.symptom.onset), prediction_ratio)) +
geom_point() +
geom_smooth()
filter(prediction_compare)
mean(case_prediction$prediction_ratio)
mean(prediction_compare$prediction_ratio)
summary(prediction_compare$prediction_ratio)
prediction_compare %>% ggplot(aes(log10(predicted_cases), prediction_ratio)) +
geom_point() +
geom_smooth()
prediction_compare %>% ggplot(aes(predicted_cases, prediction_ratio)) +
geom_point() +
geom_smooth()
prediction_compare %>% ggplot(aes(cases.symptom.onset, prediction_ratio)) +
geom_point() +
geom_smooth()
prediction_compare %>% ggplot(aes(log10(cases.symptom.onset), prediction_ratio)) +
geom_point() +
geom_smooth()
prediction_compare %>% ggplot(aes(x=cases.reported, y=predicted_cases))
geom_jitter()
prediction_compare %>% ggplot(aes(y=prediction_ratio)) +
geom_boxplot()
summary(prediction_compare$prediction_ratio)
library(tidyverse)
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, wrf, target, collection_num, ct))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>%
mutate(ct= replace_na(data = ct, replace = 39.93763483)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join_avg <- wbe_plant_join %>% group_by(collection_num,date) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
View(wbe_plant_join_avg)
library(tidyverse)
wbe_clean <- wbe %>% rename("date" = sample_date, "wrf" = facility) %>% select(c(date, wrf, target, collection_num, ct))
wbe_plant_join <- full_join(x = wbe_clean, y = plant) %>%
mutate(ct= replace_na(data = ct, replace = 39.93763483)) %>%
mutate(copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)))
wbe_plant_join_avg <- wbe_plant_join %>% group_by(collection_num,date) %>% summarize(copy_num_uL_rxn = mean(copy_num_uL_rxn), flow_L_avg = mean(influent_flow_L)) %>% mutate(copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% ungroup()
prediction <- wbe_plant_join_avg %>% mutate(predicted_cases = (flow_L_avg*copy_num_L)/(128*4.7*10^7))
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*15,
prediction_ratio = predicted_cases/cases.symptom.onset) %>%
select(!c(cases_A, cases_B, cases_C)) %>% remove_missing() %>% filter(prediction_ratio != "Inf")
prediction_compare %>% ggplot(aes(y=prediction_ratio)) +
geom_boxplot()
summary(prediction_compare$prediction_ratio)
prediction_compare %>% ggplot(aes(log10(cases.symptom.onset), prediction_ratio)) +
geom_point() +
geom_smooth()
prediction_compare %>% ggplot(aes(x=date, y=cases.symptom.onset*28))
geom_jitter()
View(prediction_compare)
prediction_compare %>% ggplot(aes(x=date, y=cases.symptom.onset))
geom_point()
prediction_compare <- full_join(prediction, covid) %>% mutate(cases_estimate = cases.symptom.onset*15,
prediction_ratio = predicted_cases/cases.symptom.onset,
symptom_norm_median = cases.symptom.onset*28) %>%
select(!c(cases_A, cases_B, cases_C)) %>% remove_missing() %>% filter(prediction_ratio != "Inf")
prediction_compare %>% ggplot(aes(as.date(date),symptom_norm_median)) +
geom_point()
prediction_compare %>% ggplot(aes(date,symptom_norm_median)) +
geom_point()
prediction_compare %>% ggplot(aes(y=prediction_ratio)) +
geom_histogram()
summary(prediction_compare$prediction_ratio)
prediction_compare %>% ggplot(aes(date,symptom_norm_median)) +
geom_point()
prediction_compare %>% ggplot(aes(date, copy_num_L*flow_L_avg)) +
geom_point()
prediction_compare %>% ggplot(aes(date,symptom_norm_median)) +
geom_point()
prediction_compare %>% ggplot(aes(date, copy_num_L*flow_L_avg)) +
geom_point()
prediction_compare %>% ggplot(aes(date, cases.symptom.onset)) +
geom_point()
prediction_compare %>% ggplot(aes(date,symptom_norm_median)) +
geom_point()
prediction_compare %>% ggplot(aes(date, copy_num_L*flow_L_avg)) +
geom_point()
prediction_compare %>% ggplot(aes(date, cases_estimate)) +
geom_point()
prediction_compare %>% ggplot(aes(date,symptom_norm_median)) +
geom_point()
prediction_compare %>% ggplot(aes(date, copy_num_L*flow_L_avg)) +
geom_point()
prediction_compare %>% ggplot(aes(date, predicted_cases)) +
geom_point()
